c:
    type: compiler
    compile: /usr/bin/gcc -O2 -Wall -std=c99 -o %filename% foo.c -lm
    code_file: foo.c
    execute: /home/%filename%
cc:
    type: compiler
    compile: /usr/bin/g++ -O2 -Wall -std=c++11 -o %filename% foo.cc -lm
    code_file: foo.cc
    execute: /home/%filename%
cc98:
    type: compiler
    compile: /usr/bin/g++ -O2 -Wall -std=c++11 -o %filename% foo.cc -lm
    code_file: foo.cc
    execute: /home/%filename%
cc11:
    type: compiler
    compile: /usr/bin/g++ -O2 -Wall -std=c++11 -o %filename% foo.cc -lm
    code_file: foo.cc
    execute: /home/%filename%
cc17:
    type: compiler
    compile: /usr/bin/g++ -O2 -Wall -std=c++17 -o %filename% foo.cc -lm
    code_file: foo.cc
    execute: /home/%filename%
pas:
    type: compiler
    compile: /usr/bin/fpc -O2 -o/home/%filename% foo.pas
    code_file: foo.pas
    execute: /home/%filename%
java:
    type: compiler
    compile: /usr/bin/javac -d /home -encoding utf8 ./Main.java
    code_file: Main.java
    execute: /usr/bin/java Main
py:
    type: compiler
    compile: /usr/bin/python -c "import py_compile; py_compile.compile('/home/foo.py', '/home/%filename%', doraise=True)"
    code_file: foo.py
    execute: /usr/bin/python %filename%
py2:
    type: compiler
    compile: /usr/bin/python -c "import py_compile; py_compile.compile('/home/foo.py', '/home/%filename%', doraise=True)"
    code_file: foo.py
    execute: /usr/bin/python %filename%
py3:
    type: compiler
    compile: /usr/bin/python3 -c "import py_compile; py_compile.compile('/home/foo.py', '/home/%filename%', doraise=True)"
    code_file: foo.py
    execute: /usr/bin/python3 %filename%
php:
    type: interpreter
    code_file: foo.php
    execute: /usr/bin/php foo.php
rs:
    type: compiler
    compile: /usr/bin/rustc -O -o /home/%filename% /home/foo.rs
    code_file: foo.rs
    execute: /home/%filename%
hs:
    type: compiler
    compile: /usr/bin/ghc -O -outputdir /tmp -o %filename% foo.hs
    code_file: foo.hs
    execute: /home/%filename%
js:
    type: interpreter
    code_file: foo.js
    execute: /usr/bin/jsc /home/foo.js
go:
    type: compiler
    compile: /usr/bin/go build -o %filename% foo.go
    code_file: foo.go
    execute: /home/%filename%
rb:
    type: interpreter
    code_file: foo.rb
    execute: /usr/bin/ruby foo.rb
cs:
    type: compiler
    compile: /usr/bin/mcs -optimize+ -out:/home/%filename% /home/foo.cs
    code_file: foo.cs
    execute: /usr/bin/mono %filename%